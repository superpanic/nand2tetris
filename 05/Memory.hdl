// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
	IN in[16], load, address[15];
	OUT out[16];

	PARTS:
	// if bit 14 is 0 then it's a RAM address
	Not(in=address[14], out=isLow);
	// if not 0 then it's SCREEN address
	Not(in=isLow, out=isHigh);
	// keyboard
	And(a=address[14], b=address[13], out=isKey);
	Not(in=isKey, out=notKey);

	// check if load is set
	And(a=load, b=isLow, out=setRam);
	And(a=load, b=isHigh, out=setScreenTemp);
	And(a=setScreenTemp, b=notKey, out=setScreen); // block if keyboard

	// access RAM and SCREEN
	RAM16K(in=in, load=setRam, address=address[0..13], out=ramOut);
	Screen(in=in, load=setScreen, address=address[0..12], out=screenOut);
	
	// keyboard is read only!	
	Keyboard(out=keyOut);

	// select output RAM, SCREEN or KEYBOARD
	Mux16(a=ramOut, b=screenOut, sel=isHigh, out=outTemp);
	Mux16(a=outTemp, b=keyOut, sel=isKey, out=out);

}
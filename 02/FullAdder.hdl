// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/FullAdder.hdl

/**
 * Computes the sum of three bits.
 */

CHIP FullAdder {
	IN a, b, c;  // 1-bit inputs
	OUT sum,     // Right bit of a + b + c
	    carry;   // Left bit of a + b + c

	PARTS:

/* 
	// working solution:
	// calculate sum
	Xor(a=b, b=c, out=xorbc);
	Not(in=xorbc, out=notxorbc);
	Mux(a=xorbc, b=notxorbc, sel=a, out=sum);
	// calculate carry
	And(a=c, b=b, out=andcb);
	And(a=b, b=a, out=andba);
	And(a=c, b=a, out=andca);
	Or(a=andcb, b=andba, out=orout);
	Or(a=orout, b=andca, out=carry);
*/

	// trying a shorter solution using halfadders (and some glue):
	HalfAdder(a=c, b=b, sum=halfsum, carry=halfcarry);
	// calculate sum
	HalfAdder(a=a, b=halfsum, sum=sum, carry=trashcarry);
	// calculate carry
	Or(a=halfsum, b=halfcarry, out=orsuca);
	Mux(a=halfcarry, b=orsuca, sel=a, out=carry);
	
}

